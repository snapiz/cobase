server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name wss.timada.dev

    access_log /var/log/nginx/websocket.log;
    error_log /var/log/nginx/websocket.log;

    location / {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://websocket;
    }

    ssl_protocols TLSv1.2;
    ssl_certificate /etc/x509/https/tls.crt;
    ssl_certificate_key /etc/x509/https/tls.key;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name sso.timada.dev

    access_log /var/log/nginx/keycloak.log;
    error_log /var/log/nginx/keycloak.log;

    location / {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://keycloak:8080;
    }

    ssl_protocols TLSv1.2;
    ssl_certificate /etc/x509/https/tls.crt;
    ssl_certificate_key /etc/x509/https/tls.key;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.cobase.timada.dev

    access_log /var/log/nginx/api.log;
    error_log /var/log/nginx/api.log;

    location / {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://host.docker.internal:3001;
    }

    ssl_protocols TLSv1.2;
    ssl_certificate /etc/x509/https/tls.crt;
    ssl_certificate_key /etc/x509/https/tls.key;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name cobase.timada.dev

    access_log /var/log/nginx/web.log;
    error_log /var/log/nginx/web.log;

    location / {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
        proxy_pass http://host.docker.internal:3000;
    }

    ssl_protocols TLSv1.2;
    ssl_certificate /etc/x509/https/tls.crt;
    ssl_certificate_key /etc/x509/https/tls.key;
}
